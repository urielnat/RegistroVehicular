@model Conexion.MODEL.Vehiculos

@{
    ViewBag.Title = "Registrar vehículo";
}

<h2>Registrar vehículo</h2>


@using (Html.BeginForm( new { @id = "vehiculoForm", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Alta vehículo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.id_entidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_entidad,
                    RegistroVehiculos.Controllers.VehiculoController.ListaEntidades(),
                    "Seleccione una entidad",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_entidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_tipo,
                    RegistroVehiculos.Controllers.VehiculoController.ListaTipos(),
                    "Seleccione un tipo de vehículo",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.marca, new { htmlAttributes = new { @class = "form-control",id="marca" } })
                @Html.ValidationMessageFor(model => model.marca, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modelo, new { htmlAttributes = new { @class = "form-control"  ,id = "modelo" } })
                @Html.ValidationMessageFor(model => model.modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.año, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.año, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.año, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numeroSerie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroSerie, new { htmlAttributes = new { @class = "form-control", id="numSerie",name= "numSerie" } })
                @Html.ValidationMessageFor(model => model.numeroSerie, "", new { @class = "text-danger",id="duplicate" })
            </div>
        </div>

    
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="command" value="Siguiente" class="btn btn-default" />
                <input type="button" value="Cancelar" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("Index", "Vehiculo") + "'");" />
            </div>
            
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al inicio", "Index") 
    @* falta index *@
</div>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")' type='text/javascript'></script>
    <style>
        .error {
            color: red;
        }
    </style>
  
<script>
    @*$(document).ready(function () {
       

        $("#vehiculoForm").validate({

            rules: {
                numSerie: {
                    required: true,
                    remote: {
                        url: '@Url.Action("ValidarNumSerie", "Vehiculo")',
                        type: "post",
                        data: {
                            serie: function () {
                                return $("#numSerie").val();
                            }
                        }
                    }

                }

            }, messages: {
                numSerie: {
                    required: "Número del motor es requiero",
                    remote: "User already in use."
                }
            },
            errorPlacement: function (error, element) {
                alert(error.text());
            }
        });

    });*@

  

    $("#marca").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("AutocompMarca", "Vehiculo")',
                dataType: "json",
                data: { bus: $("#marca").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.Text };
                    }));
                },
                error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });


        $("#modelo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("AutocompModelo", "Vehiculo")',
                dataType: "json",
                data: { bus: $("#modelo").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.Text };
                    }));
                },
                error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });



   
</script>


}
